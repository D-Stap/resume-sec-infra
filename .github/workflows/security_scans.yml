name: Security Scans
on:
  pull_request:
  push:
    branches:
      - main
permissions:
    contents: read
jobs:
 semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Semgrep
        run: pip install semgrep
      - name: Run Semgrep
        run: semgrep --config .semgrep.yml --error --json > semgrep-report.json # runs custom config, blocks on error, outputs json report
      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.json

 gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Gitleaks
      # gets the correct linux x64 tar.gz asset from Gitleaks releases
      # gets the tar.gz asset, extracts it, and moves the binary to /usr/local/bin
        run: |
          wget -O gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.17.0/gitleaks_8.17.0_linux_x64.tar.gz
          tar -xvf gitleaks.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks
        run: gitleaks detect --source . --report-format json --report-path gitleaks-report.json # scans the working tree, outputs json report
      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
 checkov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Checkov
        run: pip install checkov
      - name: Install Checkov
        run: pip install checkov
      - name: Run Checkov
        run: checkov --directory terraform --output json > checkov-report.json # scans the terraform directory, outputs json report
      - name: Upload Checkov Report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov-report.json
